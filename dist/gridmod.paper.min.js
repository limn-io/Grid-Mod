/*!
 * Copyright (c) 2014 Neil Vallon (http://limn.io)
 * Licensed under MIT (http://opensource.org/licenses/MIT)
 */
if("undefined"==typeof window)var paper=require("paper");paper.Point.inject({toGMON:function(t){var t=t?t:new paper.Point,r=this.add(t);return{x:r.x,y:r.y}},rotmod:function(t){return this.modulo(t).add(t).modulo(t)},inSet:function(t){for(var r=0;r<t.length;r++)if(this.equals(t[r]))return r;return-1}}),paper.Segment.inject({toGMON:function(t){var t=t?t:new paper.Point,r={point:this.point.toGMON(t)};return this.handleIn.isZero()||(r.handleIn=[this.handleIn.x,this.handleIn.y]),this.handleOut.isZero()||(r.handleOut=[this.handleOut.x,this.handleOut.y]),r},importWithOffset:function(t,r){return new paper.Segment({point:r.add(new paper.Point(t.point)),handleIn:t.handleIn,handleOut:t.handleOut})}}),paper.Path.inject({toGMON:function(){var t=this.layer.origin?this.layer.origin:new paper.Point;return"undefined"!=typeof this.parent.parent&&(t=t.subtract(this.parent.offset.multiply(this.layer.boardSize))),{segments:this.segments.map(function(r){return r.toGMON(t)}),strokeWidth:this.strokeWidth,strokeColor:this.strokeColor.components.map(function(t){return Math.floor(255*t)})}},importWithOffset:function(t,r){return this.segments=t.segments.map(function(t){return(new paper.Segment).importWithOffset(t,r)}),this.strokeWidth=t.strokeWidth,this.strokeColor=t.strokeColor.map(function(t){return t/255}),this.strokeCap="round",this}}),paper.Group.inject({board:new paper.Point,getOffset:function(){return this.board.subtract(this.layer.currentBoard)},addChildWithOffset:function(t){return t.position=this.offset.multiply(this.layer.boardSize).subtract(this.layer.origin).add(t.position),this.addChild(t),this},initBoard:function(t){var r=new paper.Point(t.boardID),i=r.subtract(this.layer.currentBoard).multiply(this.layer.boardSize).subtract(this.layer.origin);return this.board=r,this.children=t.children.map(function(t){return(new paper.Path).importWithOffset(t,i)}),this}}),GMLayer=paper.Layer.extend({origin:new paper.Point,currentBoard:new paper.Point,boardSize:new paper.Point(1e3),move:function(t){this.translate(t),this.origin=this.origin.subtract(t),this.currentBoard=this.currentBoard.add(this.origin.divide(this.boardSize).floor()),this.origin=this.origin.rotmod(this.boardSize)},board:function(t){for(var r=0;r<this.children.length;r++)if(void 0!==this.children[r].board&&this.children[r].board.equals(t))return this.children[r];return null},boardSet:function(){for(var t=[],r=0;r<this.children.length;r++){var i=this.children[r].board;void 0!==i&&t.push(i)}return t}});
